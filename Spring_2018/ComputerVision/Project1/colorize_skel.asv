% CS194-26 (cs219-26): Project 1, starter Matlab code

% name of the input file
imname = 'data/data/00056v.jpg';

% read in the image
fullim = imread(imname);

% convert to double matrix (might want to do this later on to same memory)
fullim = im2double(fullim);

% compute the height of each part (just 1/3 of total)
height = floor(size(fullim,1)/3);
% separate color channels
B = fullim(1:height,:);
G = fullim(height+1:height*2,:);
R = fullim(height*2+1:height*3,:);
gaussB = imgaussfilt(B,2);
gaussG = imgaussfilt(G,2);
gaussR = imgaussfilt(R,2);
gaussImage = cat(3, gaussB, gaussG, gaussR);
tempB = gaussB;
tempG = gaussG;
tempR = gaussR;
for ix=1:1
    halfB = tempB(1:2:end, 1:2:end);
    halfG = tempG(1:2:end, 1:2:end);
    halfR = tempR(1:2:end, 1:2:end);
    tempB = halfB;
    tempG = halfG;
    tempR = halfR;
    halfImage = cat(3, halfB, halfG, halfR);
    subplot(1,2,1)
    imshow(gaussImage)
    title('gauss blur image')
    subplot(1,2,2)
    imshow(halfImage)
    title('shrunk image')
end;


sixthB = B(1:6:end, 1:6:end);
sixthG = G(1:6:end, 1:6:end);
sixthR = R(1:6:end, 1:6:end);
% sixthImage = cat(3, sixthB, sixthG, sixthR);

% Align the images
% Functions that might be useful to you for aligning the images include: 
% "circshift", "sum", and "imresize" (for multiscale)
  %%%%%aG = align(G,B);
%%%%%aR = align(R,B);


% open figure
%% figure(1);

% create a color image (3D array)
% ... use the "cat" command
% show the resulting image
% ... use the "imshow" command
% save result image
%% imwrite(colorim,['result-' imname]);
